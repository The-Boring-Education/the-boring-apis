"use strict";(()=>{var e={};e.id=6508,e.ids=[6508],e.modules={8097:e=>{e.exports=require("@sentry/nextjs")},2167:e=>{e.exports=require("axios")},3582:e=>{e.exports=require("cors")},1185:e=>{e.exports=require("mongoose")},3227:e=>{e.exports=require("next-auth")},3598:e=>{e.exports=require("next-auth/providers/google")},1649:e=>{e.exports=require("next-auth/react")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3160:e=>{e.exports=require("next/dist/lib/import-next-warning")},5828:e=>{e.exports=require("uuid")},6113:e=>{e.exports=require("crypto")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},1420:(e,t,a)=>{a.r(t),a.d(t,{config:()=>v,default:()=>R,routeModule:()=>x});var r={};a.r(r),a.d(r,{default:()=>m});var s=a(1802),i=a(7153),n=a(6249),u=a(3227),o=a(5912),p=a(3300),l=a(5166),d=a(3506),c=a(8133);let handler=async(e,t)=>{try{await (0,d.uD)();let a=await (0,u.getServerSession)(e,t,c.authOptions);if(!a||!a.user)return t.status(o.uT.UNAUTHORIZED).json((0,l.OF)({status:!1,message:"Authentication required"}));let r=await p.User.findOne({email:a.user.email});if(!r||"DEVREL_ADVOCATE"!==r.occupation)return t.status(o.uT.FORBIDDEN).json((0,l.OF)({status:!1,message:"Access denied. Only DevRel Advocates can access this endpoint."}));if("GET"===e.method)return handleGetApplications(e,t);if("PUT"===e.method)return handleUpdateApplication(e,t,r._id.toString());return t.status(o.uT.METHOD_NOT_ALLOWED).json((0,l.OF)({status:!1,message:"Method not allowed"}))}catch(e){return console.error("Error in DevRel applications API:",e),t.status(o.uT.INTERNAL_SERVER_ERROR).json((0,l.OF)({status:!1,error:!0,message:"Internal server error"}))}},handleGetApplications=async(e,t)=>{let{status:a}=e.query;try{let e;return e=a&&"string"==typeof a?await p.DevRelLead.findByStatus(a).populate("reviewedBy","name email").populate("approvedBy","name email").sort({createdAt:-1}):await p.DevRelLead.find({}).populate("reviewedBy","name email").populate("approvedBy","name email").sort({createdAt:-1}),t.status(o.uT.OKAY).json((0,l.OF)({status:!0,data:e,message:"Applications fetched successfully"}))}catch(e){return console.error("Error fetching applications:",e),t.status(o.uT.INTERNAL_SERVER_ERROR).json((0,l.OF)({status:!1,error:!0,message:"Failed to fetch applications"}))}},handleUpdateApplication=async(e,t,a)=>{let{applicationId:r,status:s,notes:i,interviewDate:n,interviewLink:u}=e.body;if(!r||!s)return t.status(o.uT.BAD_REQUEST).json((0,l.OF)({status:!1,message:"Application ID and status are required"}));try{let e=await p.DevRelLead.findById(r);if(!e)return t.status(o.uT.NOT_FOUND).json((0,l.OF)({status:!1,message:"Application not found"}));return await e.updateStatus(s,a),i&&(e.rejectionReason=i),"interview_scheduled"===s&&n&&u&&(e.interviewData={scheduledAt:new Date(n),meetingLink:u,interviewerEmail:""}),await e.save(),t.status(o.uT.OKAY).json((0,l.OF)({status:!0,data:e,message:"Application status updated successfully"}))}catch(e){return console.error("Error updating application:",e),t.status(o.uT.INTERNAL_SERVER_ERROR).json((0,l.OF)({status:!1,error:e,message:"Failed to update application status"}))}},m=handler,R=(0,n.l)(r,"default"),v=(0,n.l)(r,"config"),x=new s.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/v1/devrel/applications",pathname:"/api/v1/devrel/applications",bundlePath:"",filename:""},userland:r})},3506:(e,t,a)=>{a.d(t,{D0:()=>r.D0,uD:()=>r.uD,xM:()=>r.xM});var r=a(7750)}};var t=require("../../../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),a=t.X(0,[4222,5912,5166,9276,7750,3300,8133],()=>__webpack_exec__(1420));module.exports=a})();