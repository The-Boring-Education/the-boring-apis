"use strict";(()=>{var e={};e.id=3513,e.ids=[3513],e.modules={8097:e=>{e.exports=require("@sentry/nextjs")},2167:e=>{e.exports=require("axios")},3582:e=>{e.exports=require("cors")},1185:e=>{e.exports=require("mongoose")},1649:e=>{e.exports=require("next-auth/react")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3160:e=>{e.exports=require("next/dist/lib/import-next-warning")},5828:e=>{e.exports=require("uuid")},6113:e=>{e.exports=require("crypto")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},7336:(e,r,t)=>{t.r(r),t.d(r,{config:()=>c,default:()=>d,routeModule:()=>f});var s={};t.r(s),t.d(s,{default:()=>p});var n=t(1802),i=t(7153),o=t(6249),u=t(3300),a=t(5166),l=t(3506);async function handler(e,r){await (0,a.D0)(e,r);try{switch(await (0,l.uD)(),e.method){case"GET":return handleGetCategories(e,r);case"POST":return handleCreateQuiz(e,r);default:return r.status(405).json({error:"Method not allowed"})}}catch(e){return console.error("Quiz API error:",e),r.status(500).json({error:"Internal server error"})}}async function handleGetCategories(e,r){let{withCounts:t,includeInactive:s}=e.query,n="string"==typeof s&&"true"===s,{data:i,error:o}="string"==typeof t&&"true"===t?await (0,u.getQuizCategoriesWithCountsFromDB)(n):await (0,u.getQuizCategoriesFromDB)(n);return o?r.status(400).json({error:o}):r.status(200).json({success:!0,data:i})}async function handleCreateQuiz(e,r){let{quizId:t,categoryName:s,categoryDescription:n,categoryIcon:i,questions:o,isActive:a=!0}=e.body;if(t){if(!o||!Array.isArray(o)||0===o.length)return r.status(400).json({error:"Missing required fields for append: questions"});let{data:e,error:s}=await (0,u.appendQuestionsToQuizInDB)(t,o);return s?r.status(400).json({error:s}):r.status(200).json({success:!0,data:e,message:`Successfully appended ${o.length} questions to quiz`})}if(!s||!n||!i||!o)return r.status(400).json({error:"Missing required fields: categoryName, categoryDescription, categoryIcon, questions"});if("string"!=typeof n||0===n.trim().length)return r.status(400).json({error:"categoryDescription must be a non-empty string"});if(!Array.isArray(o)||0===o.length)return r.status(400).json({error:"Questions must be a non-empty array"});let l=[],p=o.map((e,r)=>{let t=[],s=(e.question||"").trim();s||t.push("question");let n=Array.isArray(e.options)?e.options:[];n.length<2&&t.push("options(>=2)");let i="number"==typeof e.correctAnswer?e.correctAnswer:"number"==typeof e.correct_answer?e.correct_answer:void 0;"number"!=typeof i&&t.push("correctAnswer");let o=(e.explanation||"").trim();o||t.push("explanation");let u=(e.detailedExplanation||"").trim();u||t.push("detailedExplanation");let a=(e.difficulty||"").toString().toLowerCase(),p=["easy","medium","hard"].includes(a);return p||t.push("difficulty(easy|medium|hard)"),t.length?l.push(`Question[${r}] missing/invalid: ${t.join(", ")}`):"number"==typeof i&&(i<0||i>=n.length)&&l.push(`Question[${r}] correctAnswer out of bounds (0..${n.length-1})`),{question:s,options:n,correctAnswer:"number"==typeof i?i:0,explanation:o,detailedExplanation:u,difficulty:p?a:"medium"}});if(l.length)return r.status(400).json({error:l.join("; ")});let{data:d,error:c,details:f}=await (0,u.addAQuizToDB)({categoryName:s,categoryDescription:n,categoryIcon:i,questions:p,isActive:a});return c?r.status(400).json({error:c,details:f}):r.status(201).json({success:!0,data:d})}let p=handler,d=(0,o.l)(s,"default"),c=(0,o.l)(s,"config"),f=new n.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/v1/quiz",pathname:"/api/v1/quiz",bundlePath:"",filename:""},userland:s})},3506:(e,r,t)=>{t.d(r,{D0:()=>s.D0,uD:()=>s.uD,xM:()=>s.xM});var s=t(7750)}};var r=require("../../../webpack-api-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),t=r.X(0,[4222,5912,5166,9276,7750,3300],()=>__webpack_exec__(7336));module.exports=t})();