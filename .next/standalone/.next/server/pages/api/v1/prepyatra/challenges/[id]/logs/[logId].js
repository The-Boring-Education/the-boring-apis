"use strict";(()=>{var e={};e.id=2093,e.ids=[2093],e.modules={8097:e=>{e.exports=require("@sentry/nextjs")},2167:e=>{e.exports=require("axios")},3582:e=>{e.exports=require("cors")},1185:e=>{e.exports=require("mongoose")},1649:e=>{e.exports=require("next-auth/react")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3160:e=>{e.exports=require("next/dist/lib/import-next-warning")},5828:e=>{e.exports=require("uuid")},6113:e=>{e.exports=require("crypto")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},8349:(e,r,t)=>{t.r(r),t.d(r,{config:()=>c,default:()=>p,routeModule:()=>x});var s={};t.r(s),t.d(s,{default:()=>g});var a=t(1802),o=t(7153),n=t(6249),u=t(5912),l=t(3300),d=t(5166),i=t(3506);let handler=async(e,r)=>{await (0,d.D0)(e,r),await (0,i.uD)();let{method:t}=e;switch(t){case"PUT":return handleUpdateLog(e,r);case"DELETE":return handleDeleteLog(e,r);default:return r.status(u.uT.METHOD_NOT_ALLOWED).json((0,d.OF)({status:!1,message:`Method ${e.method} Not Allowed`}))}},handleUpdateLog=async(e,r)=>{try{let{logId:t}=e.query,{progressText:s,hoursSpent:a,nextGoals:o}=e.body;if(!t)return r.status(u.uT.BAD_REQUEST).json((0,d.OF)({status:!1,message:"Log ID is required"}));let n=await l.ChallengeLog.findByIdAndUpdate(t,{progressText:s,hoursSpent:a,nextGoals:o},{new:!0,runValidators:!0});if(!n)return r.status(u.uT.NOT_FOUND).json((0,d.OF)({status:!1,message:"Log not found"}));return r.status(u.uT.OKAY).json((0,d.OF)({status:!0,message:"Log updated successfully",data:n}))}catch(e){return console.error("Update Challenge Log Error:",e),r.status(u.uT.INTERNAL_SERVER_ERROR).json((0,d.OF)({status:!1,message:"Internal server error",error:e instanceof Error?e.message:"Unknown error"}))}},handleDeleteLog=async(e,r)=>{try{let{logId:t}=e.query;if(!t)return r.status(u.uT.BAD_REQUEST).json((0,d.OF)({status:!1,message:"Log ID is required"}));let s=await l.ChallengeLog.findByIdAndDelete(t);if(!s)return r.status(u.uT.NOT_FOUND).json((0,d.OF)({status:!1,message:"Log not found"}));return r.status(u.uT.OKAY).json((0,d.OF)({status:!0,message:"Log deleted successfully"}))}catch(e){return console.error("Delete Challenge Log Error:",e),r.status(u.uT.INTERNAL_SERVER_ERROR).json((0,d.OF)({status:!1,message:"Internal server error",error:e instanceof Error?e.message:"Unknown error"}))}},g=handler,p=(0,n.l)(s,"default"),c=(0,n.l)(s,"config"),x=new a.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/v1/prepyatra/challenges/[id]/logs/[logId]",pathname:"/api/v1/prepyatra/challenges/[id]/logs/[logId]",bundlePath:"",filename:""},userland:s})},3506:(e,r,t)=>{t.d(r,{D0:()=>s.D0,uD:()=>s.uD,xM:()=>s.xM});var s=t(7750)}};var r=require("../../../../../../../webpack-api-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),t=r.X(0,[4222,5912,5166,9276,7750,3300],()=>__webpack_exec__(8349));module.exports=t})();