"use strict";(()=>{var e={};e.id=6570,e.ids=[6570],e.modules={8097:e=>{e.exports=require("@sentry/nextjs")},2167:e=>{e.exports=require("axios")},3582:e=>{e.exports=require("cors")},1185:e=>{e.exports=require("mongoose")},1649:e=>{e.exports=require("next-auth/react")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3160:e=>{e.exports=require("next/dist/lib/import-next-warning")},5828:e=>{e.exports=require("uuid")},6113:e=>{e.exports=require("crypto")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},930:(e,r,s)=>{s.r(r),s.d(r,{config:()=>c,default:()=>h,routeModule:()=>p});var t={};s.r(t),s.d(t,{default:()=>g});var a=s(1802),n=s(7153),u=s(6249),l=s(5912),o=s(3300),i=s(5166),d=s(3506);let handler=async(e,r)=>{await (0,i.D0)(e,r),await (0,d.uD)();let{method:s}=e;switch(s){case"GET":return handleGetChallenge(e,r);case"PUT":return handleUpdateChallenge(e,r);case"DELETE":return handleDeleteChallenge(e,r);default:return r.status(l.uT.METHOD_NOT_ALLOWED).json((0,i.OF)({status:!1,message:`Method ${e.method} Not Allowed`}))}},handleGetChallenge=async(e,r)=>{try{let{id:s}=e.query;if(!s)return r.status(l.uT.BAD_REQUEST).json((0,i.OF)({status:!1,message:"Challenge ID is required"}));let t=await o.Challenge.findById(s);if(!t)return r.status(l.uT.NOT_FOUND).json((0,i.OF)({status:!1,message:"Challenge not found"}));return r.status(l.uT.OKAY).json((0,i.OF)({status:!0,message:"Challenge retrieved successfully",data:t}))}catch(e){return console.error("Get Challenge Error:",e),r.status(l.uT.INTERNAL_SERVER_ERROR).json((0,i.OF)({status:!1,message:"Internal server error",error:e instanceof Error?e.message:"Unknown error"}))}},handleUpdateChallenge=async(e,r)=>{try{let{id:s}=e.query,{name:t,totalDays:a,category:n,isActive:u}=e.body;if(!s)return r.status(l.uT.BAD_REQUEST).json((0,i.OF)({status:!1,message:"Challenge ID is required"}));let d=await o.Challenge.findByIdAndUpdate(s,{name:t,totalDays:a,category:n,isActive:u},{new:!0,runValidators:!0});if(!d)return r.status(l.uT.NOT_FOUND).json((0,i.OF)({status:!1,message:"Challenge not found"}));return r.status(l.uT.OKAY).json((0,i.OF)({status:!0,message:"Challenge updated successfully",data:d}))}catch(e){return console.error("Update Challenge Error:",e),r.status(l.uT.INTERNAL_SERVER_ERROR).json((0,i.OF)({status:!1,message:"Internal server error",error:e instanceof Error?e.message:"Unknown error"}))}},handleDeleteChallenge=async(e,r)=>{try{let{id:s}=e.query;if(!s)return r.status(l.uT.BAD_REQUEST).json((0,i.OF)({status:!1,message:"Challenge ID is required"}));let t=await o.Challenge.findByIdAndDelete(s);if(!t)return r.status(l.uT.NOT_FOUND).json((0,i.OF)({status:!1,message:"Challenge not found"}));return r.status(l.uT.OKAY).json((0,i.OF)({status:!0,message:"Challenge permanently deleted successfully"}))}catch(e){return console.error("Delete Challenge Error:",e),r.status(l.uT.INTERNAL_SERVER_ERROR).json((0,i.OF)({status:!1,message:"Internal server error",error:e instanceof Error?e.message:"Unknown error"}))}},g=handler,h=(0,u.l)(t,"default"),c=(0,u.l)(t,"config"),p=new a.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/v1/prepyatra/challenges/[id]",pathname:"/api/v1/prepyatra/challenges/[id]",bundlePath:"",filename:""},userland:t})},3506:(e,r,s)=>{s.d(r,{D0:()=>t.D0,uD:()=>t.uD,xM:()=>t.xM});var t=s(7750)}};var r=require("../../../../../webpack-api-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),s=r.X(0,[4222,5912,5166,9276,7750,3300],()=>__webpack_exec__(930));module.exports=s})();