"use strict";(()=>{var e={};e.id=5563,e.ids=[5563],e.modules={8097:e=>{e.exports=require("@sentry/nextjs")},2167:e=>{e.exports=require("axios")},3582:e=>{e.exports=require("cors")},1185:e=>{e.exports=require("mongoose")},1649:e=>{e.exports=require("next-auth/react")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3160:e=>{e.exports=require("next/dist/lib/import-next-warning")},5828:e=>{e.exports=require("uuid")},6113:e=>{e.exports=require("crypto")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},2768:(e,t,s)=>{s.r(t),s.d(t,{config:()=>p,default:()=>c,routeModule:()=>E});var r={};s.r(r),s.d(r,{default:()=>R});var a=s(1802),u=s(7153),o=s(6249),n=s(5912),i=s(3300),d=s(5166),l=s(3506);let handler=async(e,t)=>{await (0,l.uD)();let{method:s,query:r}=e,{courseId:a,userId:u}=r;switch(s){case"GET":return handleGetCourseById(e,t,u,a);case"PATCH":return handleUpdateCourse(e,t,a);case"DELETE":return handleDeleteCourse(e,t,a);default:return t.status(n.uT.BAD_REQUEST).json((0,d.OF)({status:!1,message:`Method ${e.method} Not Allowed`}))}},handleDeleteCourse=async(e,t,s)=>{try{let{error:e}=await (0,i.deleteACourseFromDBById)(s);if(e)return t.status(n.uT.INTERNAL_SERVER_ERROR).json((0,d.OF)({status:!1,message:"Failed while deleting course",error:e}));return t.status(n.uT.OKAY).json((0,d.OF)({status:!0,data:null}))}catch(e){return t.status(n.uT.INTERNAL_SERVER_ERROR).json((0,d.OF)({status:!1,message:"Failed while deleting course",error:e}))}},handleUpdateCourse=async(e,t,s)=>{let r=e.body,{error:a}=await (0,i.getACourseFromDBById)(s);if(a)return t.status(n.uT.INTERNAL_SERVER_ERROR).json((0,d.OF)({status:!1,message:"Course not found",error:a}));try{let{data:e,error:a}=await (0,i.updateACourseInDB)({updatedData:r,courseId:s});if(a)return t.status(n.uT.INTERNAL_SERVER_ERROR).json((0,d.OF)({status:!1,message:"Failed while updating course",error:a}));return t.status(n.uT.OKAY).json((0,d.OF)({status:!0,data:e}))}catch(e){return t.status(n.uT.INTERNAL_SERVER_ERROR).json((0,d.OF)({status:!1,message:"Failed while updating course",error:e}))}},handleGetCourseById=async(e,t,s,r)=>{try{let{data:e,error:a}=await (0,i.getACourseForUserFromDB)(s,r);if(a)return t.status(n.uT.NOT_FOUND).json((0,d.OF)({status:!1,message:a}));return t.status(n.uT.OKAY).json((0,d.OF)({status:!0,data:e}))}catch(e){return t.status(n.uT.INTERNAL_SERVER_ERROR).json((0,d.OF)({status:!1,message:"Failed to fetch courses with chapter status",error:e}))}},R=handler,c=(0,o.l)(r,"default"),p=(0,o.l)(r,"config"),E=new a.PagesAPIRouteModule({definition:{kind:u.x.PAGES_API,page:"/api/v1/shiksha/[courseId]",pathname:"/api/v1/shiksha/[courseId]",bundlePath:"",filename:""},userland:r})},3506:(e,t,s)=>{s.d(t,{D0:()=>r.D0,uD:()=>r.uD,xM:()=>r.xM});var r=s(7750)}};var t=require("../../../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),s=t.X(0,[4222,5912,5166,9276,7750,3300],()=>__webpack_exec__(2768));module.exports=s})();