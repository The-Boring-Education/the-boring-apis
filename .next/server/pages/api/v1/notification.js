"use strict";(()=>{var t={};t.id=5072,t.ids=[5072],t.modules={8097:t=>{t.exports=require("@sentry/nextjs")},2167:t=>{t.exports=require("axios")},3582:t=>{t.exports=require("cors")},1185:t=>{t.exports=require("mongoose")},1649:t=>{t.exports=require("next-auth/react")},145:t=>{t.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3160:t=>{t.exports=require("next/dist/lib/import-next-warning")},5828:t=>{t.exports=require("uuid")},6113:t=>{t.exports=require("crypto")},7147:t=>{t.exports=require("fs")},1017:t=>{t.exports=require("path")},5466:(t,e,a)=>{a.r(e),a.d(e,{config:()=>N,default:()=>f,routeModule:()=>O});var s={};a.r(s),a.d(s,{default:()=>l});var i=a(1802),o=a(7153),r=a(6249),n=a(5912),u=a(3300),d=a(5166),c=a(3506);let handler=async(t,e)=>{if(await (0,c.D0)(t,e),"OPTIONS"===t.method){e.status(200).end();return}await (0,c.uD)();let{method:a}=t;switch(a){case"POST":return handleAddANotification(t,e);case"GET":return handleGetAllNotification(t,e);case"PATCH":return handleUpdateANotification(t,e);case"DELETE":return handleDeleteANotification(t,e);default:return e.status(n.uT.BAD_REQUEST).json((0,d.OF)({status:!1,message:`Method ${a} Not Allowed`}))}},handleAddANotification=async(t,e)=>{try{let a=t.body,{data:s,error:i}=await (0,u.addANotificationToDB)(a);if(i)return e.status(n.uT.NOT_FOUND).json((0,d.OF)({status:!1,message:"Notification not added",error:i}));return e.status(n.uT.OKAY).json((0,d.OF)({status:!0,message:"Notification added successfully",data:s}))}catch(t){return e.status(n.uT.NOT_FOUND).json((0,d.OF)({status:!1,message:"Failed while adding Notification",error:t}))}},handleGetAllNotification=async(t,e)=>{try{let{data:t,error:a}=await (0,u.getAllNotificationsFromDB)();if(a)return e.status(n.uT.NOT_FOUND).json((0,d.OF)({status:!1,message:"Failed while fetching Notifications",error:a}));return e.status(n.uT.OKAY).json((0,d.OF)({status:!0,data:t}))}catch(t){return e.status(n.uT.NOT_FOUND).json((0,d.OF)({status:!1,message:"Failed while fetching Notifications",error:t}))}},handleUpdateANotification=async(t,e)=>{try{let a=t.body,{data:s,error:i}=await (0,u.updateANotificationInDB)(a);if(i)return e.status(n.uT.NOT_FOUND).json((0,d.OF)({status:!1,message:"Notification not updated",error:i}));return e.status(n.uT.OKAY).json((0,d.OF)({status:!0,message:"Notification updated successfully",data:s}))}catch(t){return e.status(n.uT.NOT_FOUND).json((0,d.OF)({status:!1,message:"Failed while updating notification",error:t}))}},handleDeleteANotification=async(t,e)=>{try{let{notificationId:a}=t.body,{data:s,error:i}=await (0,u.deleteANotificationsFromDB)(a);if(i)return e.status(n.uT.NOT_FOUND).json((0,d.OF)({status:!1,message:"Notification not deleted",error:i}));return e.status(n.uT.OKAY).json((0,d.OF)({status:!0,message:"Notification deleted successfully",data:s}))}catch(t){return e.status(n.uT.NOT_FOUND).json((0,d.OF)({status:!1,message:"Failed while deleting notification",error:t}))}},l=handler,f=(0,r.l)(s,"default"),N=(0,r.l)(s,"config"),O=new i.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/v1/notification",pathname:"/api/v1/notification",bundlePath:"",filename:""},userland:s})},3506:(t,e,a)=>{a.d(e,{D0:()=>s.D0,uD:()=>s.uD,xM:()=>s.xM});var s=a(7750)}};var e=require("../../../webpack-api-runtime.js");e.C(t);var __webpack_exec__=t=>e(e.s=t),a=e.X(0,[4222,5912,5166,9276,7750,3300],()=>__webpack_exec__(5466));module.exports=a})();