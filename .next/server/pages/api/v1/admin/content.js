"use strict";(()=>{var e={};e.id=4597,e.ids=[4597],e.modules={8097:e=>{e.exports=require("@sentry/nextjs")},2167:e=>{e.exports=require("axios")},3582:e=>{e.exports=require("cors")},1185:e=>{e.exports=require("mongoose")},1649:e=>{e.exports=require("next-auth/react")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3160:e=>{e.exports=require("next/dist/lib/import-next-warning")},5828:e=>{e.exports=require("uuid")},6113:e=>{e.exports=require("crypto")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},5923:(e,t,s)=>{s.r(t),s.d(t,{config:()=>m,default:()=>c,routeModule:()=>g});var a={};s.r(a),s.d(a,{default:()=>$});var r=s(1802),o=s(7153),n=s(6249),i=s(5912),u=s(3300),l=s(5166),d=s(7750);let handler=async(e,t)=>{if(await (0,l.D0)(e,t),"OPTIONS"===e.method){t.status(200).end();return}await (0,d.uD)();let{method:s,query:a}=e,{action:r,contentType:o,contentId:n,startDate:u,endDate:$,page:c="1",limit:m="20",sortBy:g="createdAt",order:p="desc"}=a;return"GET"!==s?t.status(i.uT.METHOD_NOT_ALLOWED).json((0,l.OF)({status:!1,message:`Method ${s} not allowed`})):handleContentManagementRequest(t,r,o,n,u,$,parseInt(c),parseInt(m),g,p)},handleContentManagementRequest=async(e,t,s,a,r,o,n,u,d,$)=>{try{let c=getDateRange(r,o);switch(t){case"performance":return await getContentPerformance(e,s,c);case"details":return await getContentDetails(e,s,a,c);case"engagement":return await getContentEngagement(e,s,c);case"difficulty-analysis":return await getDifficultyAnalysis(e,c);case"completion-funnel":return await getCompletionFunnel(e,s,a,c);case"feedback-analysis":return await getFeedbackAnalysis(e,s,c);case"trending":return await getTrendingContent(e,c);case"optimization-insights":return await getOptimizationInsights(e,c);case"content-gaps":return await getContentGaps(e,c);case"list":return await getContentList(e,s,n,u,d,"desc"===$?-1:1,c);default:return e.status(i.uT.BAD_REQUEST).json((0,l.OF)({status:!1,message:"Invalid action specified"}))}}catch(t){return e.status(i.uT.INTERNAL_SERVER_ERROR).json((0,l.OF)({status:!1,error:t,message:"Error processing content management request"}))}},getDateRange=(e,t)=>{let s=t?new Date(t):new Date,a=new Date(e||s.getTime()-2592e6);return{start:a,end:s}},getContentPerformance=async(e,t,s)=>{let a;let{start:r,end:o}=s;switch(t){case"courses":a=await u.UserCourse.aggregate([{$match:{createdAt:{$gte:r,$lte:o}}},{$group:{_id:"$courseId",enrollments:{$sum:1},completions:{$sum:{$cond:[{$eq:["$isCompleted",!0]},1,0]}},avgChaptersCompleted:{$avg:{$size:{$filter:{input:"$chapters",cond:{$eq:["$$this.isCompleted",!0]}}}}},certificatesIssued:{$sum:{$cond:[{$ne:["$certificateId",null]},1,0]}}}},{$lookup:{from:"courses",localField:"_id",foreignField:"_id",as:"courseInfo"}},{$unwind:"$courseInfo"},{$addFields:{completionRate:{$multiply:[{$divide:["$completions","$enrollments"]},100]},certificateRate:{$multiply:[{$divide:["$certificatesIssued","$enrollments"]},100]}}},{$project:{courseName:"$courseInfo.name",courseSlug:"$courseInfo.slug",difficulty:"$courseInfo.difficultyLevel",roadmap:"$courseInfo.roadmap",isPremium:"$courseInfo.isPremium",price:"$courseInfo.price",enrollments:1,completions:1,completionRate:1,certificatesIssued:1,certificateRate:1,avgChaptersCompleted:1,totalChapters:{$size:"$courseInfo.chapters"}}},{$sort:{enrollments:-1}}]);break;case"projects":a=await u.UserProject.aggregate([{$match:{createdAt:{$gte:r,$lte:o}}},{$group:{_id:"$projectId",enrollments:{$sum:1},avgSectionsCompleted:{$avg:{$size:{$filter:{input:"$sections",cond:{$allElementsTrue:{$map:{input:"$$this.chapters",as:"chapter",in:"$$chapter.isCompleted"}}}}}}}}},{$lookup:{from:"projects",localField:"_id",foreignField:"_id",as:"projectInfo"}},{$unwind:"$projectInfo"},{$project:{projectName:"$projectInfo.name",projectSlug:"$projectInfo.slug",difficulty:"$projectInfo.difficultyLevel",roadmap:"$projectInfo.roadmap",isPremium:"$projectInfo.isPremium",price:"$projectInfo.price",enrollments:1,avgSectionsCompleted:1,totalSections:{$size:"$projectInfo.sections"}}},{$sort:{enrollments:-1}}]);break;case"sheets":a=await u.UserSheet.aggregate([{$match:{createdAt:{$gte:r,$lte:o}}},{$group:{_id:"$sheetId",enrollments:{$sum:1},avgQuestionsCompleted:{$avg:{$size:{$filter:{input:"$questions",cond:{$eq:["$$this.isCompleted",!0]}}}}}}},{$lookup:{from:"interviewsheets",localField:"_id",foreignField:"_id",as:"sheetInfo"}},{$unwind:"$sheetInfo"},{$project:{sheetName:"$sheetInfo.name",sheetSlug:"$sheetInfo.slug",roadmap:"$sheetInfo.roadmap",isPremium:"$sheetInfo.isPremium",price:"$sheetInfo.price",enrollments:1,avgQuestionsCompleted:1,totalQuestions:{$size:"$sheetInfo.questions"}}},{$sort:{enrollments:-1}}]);break;default:return e.status(i.uT.BAD_REQUEST).json((0,l.OF)({status:i.uT.BAD_REQUEST,error:!0,message:"Invalid content type specified"}))}return e.status(i.uT.OKAY).json((0,l.OF)({status:!0,data:a}))},getContentDetails=async(e,t,s,a)=>{let r,o,n;if(!s)return e.status(i.uT.BAD_REQUEST).json((0,l.OF)({status:i.uT.BAD_REQUEST,error:!0,message:"Content ID is required"}));let{start:d,end:$}=a;switch(t){case"courses":r=await u.Course.findById(s),o=await u.UserCourse.aggregate([{$match:{courseId:s,updatedAt:{$gte:d,$lte:$}}},{$group:{_id:null,totalEnrollments:{$sum:1},completions:{$sum:{$cond:[{$eq:["$isCompleted",!0]},1,0]}},certificatesIssued:{$sum:{$cond:[{$ne:["$certificateId",null]},1,0]}}}}]);{let t=await u.UserCourse.aggregate([{$match:{courseId:s,updatedAt:{$gte:d,$lte:$}}},{$unwind:"$chapters"},{$group:{_id:"$chapters.chapterId",totalViews:{$sum:1},completions:{$sum:{$cond:[{$eq:["$chapters.isCompleted",!0]},1,0]}}}},{$addFields:{completionRate:{$multiply:[{$divide:["$completions","$totalViews"]},100]}}},{$sort:{completionRate:-1}}]);return n=await u.Feedback.find({type:"SHIKSHA_COURSE",ref:s,createdAt:{$gte:d,$lte:$}}),e.status(i.uT.OKAY).json((0,l.OF)({status:i.uT.OKAY,error:!1,message:"Content details fetched successfully",data:{contentDetails:r,engagementMetrics:o[0]||{},chapterEngagement:t,feedbackData:n,averageRating:n.length>0?n.reduce((e,t)=>e+t.rating,0)/n.length:0}}))}case"projects":return r=await u.Project.findById(s),o=await u.UserProject.aggregate([{$match:{projectId:s,updatedAt:{$gte:d,$lte:$}}},{$group:{_id:null,totalEnrollments:{$sum:1}}}]),e.status(i.uT.OKAY).json((0,l.OF)({status:i.uT.OKAY,error:!1,message:"Content details fetched successfully",data:{contentDetails:r,engagementMetrics:o[0]||{}}}));case"sheets":return r=await u.InterviewSheet.findById(s),o=await u.UserSheet.aggregate([{$match:{sheetId:s,updatedAt:{$gte:d,$lte:$}}},{$group:{_id:null,totalEnrollments:{$sum:1}}}]),n=await u.Feedback.find({type:"INTERVIEW_SHEET",ref:s,createdAt:{$gte:d,$lte:$}}),e.status(i.uT.OKAY).json((0,l.OF)({status:i.uT.OKAY,error:!1,message:"Content details fetched successfully",data:{contentDetails:r,engagementMetrics:o[0]||{},feedbackData:n,averageRating:n.length>0?n.reduce((e,t)=>e+t.rating,0)/n.length:0}}));default:return e.status(i.uT.BAD_REQUEST).json((0,l.OF)({status:i.uT.BAD_REQUEST,error:!0,message:"Invalid content type specified"}))}},getContentEngagement=async(e,t,s)=>{let{start:a,end:r}=s,o=await u.UserCourse.aggregate([{$match:{updatedAt:{$gte:a,$lte:r}}},{$group:{_id:{hour:{$hour:"$updatedAt"},dayOfWeek:{$dayOfWeek:"$updatedAt"}},activityCount:{$sum:1}}},{$sort:{"_id.hour":1,"_id.dayOfWeek":1}}]),n=await u.UserCourse.aggregate([{$match:{updatedAt:{$gte:a,$lte:r}}},{$lookup:{from:"users",localField:"userId",foreignField:"_id",as:"user"}},{$unwind:"$user"},{$group:{_id:"$user.occupation",totalEngagement:{$sum:1},uniqueUsers:{$addToSet:"$userId"}}},{$addFields:{uniqueUserCount:{$size:"$uniqueUsers"}}}]);return e.status(i.uT.OKAY).json((0,l.OF)({status:i.uT.OKAY,error:!1,message:"Content engagement fetched successfully",data:{engagementByTime:o,engagementByDemographics:n}}))},getDifficultyAnalysis=async(e,t)=>{let{start:s,end:a}=t,r=await u.UserCourse.aggregate([{$match:{createdAt:{$gte:s,$lte:a}}},{$lookup:{from:"courses",localField:"courseId",foreignField:"_id",as:"course"}},{$unwind:"$course"},{$group:{_id:"$course.difficultyLevel",totalEnrollments:{$sum:1},completions:{$sum:{$cond:[{$eq:["$isCompleted",!0]},1,0]}},avgChaptersCompleted:{$avg:{$size:{$filter:{input:"$chapters",cond:{$eq:["$$this.isCompleted",!0]}}}}}}},{$addFields:{completionRate:{$multiply:[{$divide:["$completions","$totalEnrollments"]},100]}}}]),o=await u.UserCourse.aggregate([{$match:{createdAt:{$gte:s,$lte:a}}},{$lookup:{from:"courses",localField:"courseId",foreignField:"_id",as:"course"}},{$unwind:"$course"},{$group:{_id:"$course.roadmap",totalEnrollments:{$sum:1},completions:{$sum:{$cond:[{$eq:["$isCompleted",!0]},1,0]}}}},{$addFields:{completionRate:{$multiply:[{$divide:["$completions","$totalEnrollments"]},100]}}}]);return e.status(i.uT.OKAY).json((0,l.OF)({status:i.uT.OKAY,error:!1,message:"Difficulty analysis fetched successfully",data:{coursesDifficultyAnalysis:r,roadmapAnalysis:o}}))},getCompletionFunnel=async(e,t,s,a)=>{if(!s)return e.status(i.uT.BAD_REQUEST).json((0,l.OF)({status:i.uT.BAD_REQUEST,error:!0,message:"Content ID is required for funnel analysis"}));let{start:r,end:o}=a;if("courses"===t){let t=await u.UserCourse.aggregate([{$match:{courseId:s,createdAt:{$gte:r,$lte:o}}},{$unwind:"$chapters"},{$group:{_id:"$chapters.chapterId",started:{$sum:1},completed:{$sum:{$cond:[{$eq:["$chapters.isCompleted",!0]},1,0]}}}},{$addFields:{completionRate:{$multiply:[{$divide:["$completed","$started"]},100]}}},{$sort:{_id:1}}]);return e.status(i.uT.OKAY).json((0,l.OF)({status:i.uT.OKAY,error:!1,message:"Funnel analysis fetched successfully",data:{funnelData:t}}))}return e.status(i.uT.BAD_REQUEST).json((0,l.OF)({status:i.uT.BAD_REQUEST,error:!0,message:"Funnel analysis not implemented for this content type"}))},getFeedbackAnalysis=async(e,t,s)=>{let a;let{start:r,end:o}=s;switch(t){case"courses":a="SHIKSHA_COURSE";break;case"sheets":a="INTERVIEW_SHEET";break;default:a="GENERAL"}let n=await u.Feedback.aggregate([{$match:{type:a,createdAt:{$gte:r,$lte:o}}},{$group:{_id:"$rating",count:{$sum:1},feedbacks:{$push:"$feedback"}}},{$sort:{_id:1}}]),d=await u.Feedback.aggregate([{$match:{type:a,createdAt:{$gte:r,$lte:o}}},{$group:{_id:null,averageRating:{$avg:"$rating"},totalFeedback:{$sum:1}}}]);return e.status(i.uT.OKAY).json((0,l.OF)({status:!0,data:{feedbackAnalysis:n,averageRating:d[0]?.averageRating||0,totalFeedback:d[0]?.totalFeedback||0}}))},getTrendingContent=async(e,t)=>{let{start:s,end:a}=t,r=await u.UserCourse.aggregate([{$match:{createdAt:{$gte:s,$lte:a}}},{$group:{_id:"$courseId",enrollments:{$sum:1},recentActivity:{$sum:{$cond:[{$gte:["$updatedAt",new Date(Date.now()-6048e5)]},1,0]}}}},{$lookup:{from:"courses",localField:"_id",foreignField:"_id",as:"course"}},{$unwind:"$course"},{$addFields:{trendingScore:{$add:[{$multiply:["$enrollments",1]},{$multiply:["$recentActivity",3]}]}}},{$sort:{trendingScore:-1}},{$limit:10}]),o=await u.UserSheet.aggregate([{$match:{createdAt:{$gte:s,$lte:a}}},{$group:{_id:"$sheetId",enrollments:{$sum:1},recentActivity:{$sum:{$cond:[{$gte:["$updatedAt",new Date(Date.now()-6048e5)]},1,0]}}}},{$lookup:{from:"interviewsheets",localField:"_id",foreignField:"_id",as:"sheet"}},{$unwind:"$sheet"},{$addFields:{trendingScore:{$add:[{$multiply:["$enrollments",1]},{$multiply:["$recentActivity",3]}]}}},{$sort:{trendingScore:-1}},{$limit:10}]);return e.status(i.uT.OKAY).json((0,l.OF)({status:!0,data:{trendingCourses:r,trendingSheets:o}}))},getOptimizationInsights=async(e,t)=>{let{start:s,end:a}=t,r=await u.UserCourse.aggregate([{$match:{createdAt:{$gte:s,$lte:a}}},{$group:{_id:"$courseId",enrollments:{$sum:1},completions:{$sum:{$cond:[{$eq:["$isCompleted",!0]},1,0]}}}},{$addFields:{completionRate:{$divide:["$completions","$enrollments"]}}},{$match:{enrollments:{$gte:10},completionRate:{$lt:.3}}},{$lookup:{from:"courses",localField:"_id",foreignField:"_id",as:"course"}},{$unwind:"$course"},{$project:{courseName:"$course.name",enrollments:1,completions:1,completionRate:{$multiply:["$completionRate",100]}}}]),o=await u.UserCourse.aggregate([{$match:{createdAt:{$gte:s,$lte:a}}},{$unwind:"$chapters"},{$group:{_id:"$chapters.chapterId",started:{$sum:1},completed:{$sum:{$cond:[{$eq:["$chapters.isCompleted",!0]},1,0]}}}},{$addFields:{dropOffRate:{$multiply:[{$subtract:[1,{$divide:["$completed","$started"]}]},100]}}},{$match:{started:{$gte:10},dropOffRate:{$gt:70}}},{$sort:{dropOffRate:-1}}]);return e.status(i.uT.OKAY).json((0,l.OF)({status:!0,data:{lowPerformingCourses:r,highDropOffChapters:o}}))},getContentGaps=async(e,t)=>{let{start:s,end:a}=t,r=await u.UserCourse.aggregate([{$match:{createdAt:{$gte:s,$lte:a}}},{$lookup:{from:"courses",localField:"courseId",foreignField:"_id",as:"course"}},{$unwind:"$course"},{$group:{_id:"$course.roadmap",totalEnrollments:{$sum:1},uniqueCourses:{$addToSet:"$courseId"}}},{$addFields:{courseCount:{$size:"$uniqueCourses"},demandPerCourse:{$divide:["$totalEnrollments","$courseCount"]}}},{$match:{demandPerCourse:{$gt:50},courseCount:{$lt:5}}},{$sort:{demandPerCourse:-1}}]),o=await u.Course.aggregate([{$group:{_id:"$difficultyLevel",courseCount:{$sum:1}}},{$lookup:{from:"usercourses",pipeline:[{$match:{createdAt:{$gte:s,$lte:a}}},{$lookup:{from:"courses",localField:"courseId",foreignField:"_id",as:"course"}},{$unwind:"$course"},{$group:{_id:"$course.difficultyLevel",totalEnrollments:{$sum:1}}}],as:"enrollmentData"}},{$addFields:{totalEnrollments:{$ifNull:[{$arrayElemAt:["$enrollmentData.totalEnrollments",0]},0]},demandPerCourse:{$divide:[{$ifNull:[{$arrayElemAt:["$enrollmentData.totalEnrollments",0]},0]},"$courseCount"]}}}]);return e.status(i.uT.OKAY).json((0,l.OF)({status:!0,data:{roadmapGaps:r,difficultyGaps:o}}))},getContentList=async(e,t,s,a,r,o,n)=>{let d,$;let{start:c,end:m}=n,g=(s-1)*a,p={createdAt:{$gte:c,$lte:m}},f={[r]:o};switch(t){case"courses":d=await u.Course.find(p).sort(f).skip(g).limit(a).lean(),$=await u.Course.countDocuments(p);break;case"projects":d=await u.Project.find(p).sort(f).skip(g).limit(a).lean(),$=await u.Project.countDocuments(p);break;case"sheets":d=await u.InterviewSheet.find(p).sort(f).skip(g).limit(a).lean(),$=await u.InterviewSheet.countDocuments(p);break;case"webinars":d=await u.Webinar.find(p).sort(f).skip(g).limit(a).lean(),$=await u.Webinar.countDocuments(p);break;default:return e.status(i.uT.BAD_REQUEST).json((0,l.OF)({status:!1,message:"Invalid content type specified"}))}let h=Math.ceil($/a);return e.status(i.uT.OKAY).json((0,l.OF)({status:!0,data:{content:d,pagination:{currentPage:s,totalPages:h,totalContent:$,hasNext:s<h,hasPrev:s>1}}}))},$=handler,c=(0,n.l)(a,"default"),m=(0,n.l)(a,"config"),g=new r.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/v1/admin/content",pathname:"/api/v1/admin/content",bundlePath:"",filename:""},userland:a})}};var t=require("../../../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),s=t.X(0,[4222,5912,5166,9276,7750,3300],()=>__webpack_exec__(5923));module.exports=s})();