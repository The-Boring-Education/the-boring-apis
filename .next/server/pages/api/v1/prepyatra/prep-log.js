"use strict";(()=>{var e={};e.id=7770,e.ids=[7770],e.modules={8097:e=>{e.exports=require("@sentry/nextjs")},2167:e=>{e.exports=require("axios")},3582:e=>{e.exports=require("cors")},1185:e=>{e.exports=require("mongoose")},1649:e=>{e.exports=require("next-auth/react")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3160:e=>{e.exports=require("next/dist/lib/import-next-warning")},5828:e=>{e.exports=require("uuid")},6113:e=>{e.exports=require("crypto")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},675:(e,t,s)=>{s.r(t),s.d(t,{config:()=>c,default:()=>p,routeModule:()=>m});var r={};s.r(r),s.d(r,{default:()=>l});var a=s(1802),n=s(7153),o=s(6249),u=s(5912),i=s(3300),d=s(5166),g=s(3506);let handler=async(e,t)=>{switch(await (0,d.D0)(e,t),await (0,g.uD)(),e.method){case"POST":return handleAddLog(e,t);case"GET":return handleGetLogs(e,t);case"PUT":return handleUpdateLog(e,t);case"PATCH":return handleAddMentorFeedback(e,t);case"DELETE":return handleDeleteLog(e,t);default:return t.status(u.uT.METHOD_NOT_ALLOWED).json((0,d.OF)({status:!1,message:`Method ${e.method} not allowed`}))}},handleAddLog=async(e,t)=>{try{let{userId:s,title:r,description:a,timeSpent:n}=e.body;if(!s||!r||!n)return t.status(u.uT.BAD_REQUEST).json((0,d.OF)({status:!1,message:"userId, title, and durationDays are required"}));let{data:o,error:g}=await (0,i.addPrepLogToDB)({userId:s,title:r,description:a,timeSpent:n});if(g)return t.status(u.uT.BAD_REQUEST).json((0,d.OF)({status:!1,message:g}));try{await (0,i.handleGamificationPoints)(!0,s,"PREPLOG_CREATED")}catch(e){console.error("Gamification trigger failed:",e)}return t.status(u.uT.RESOURCE_CREATED).json((0,d.OF)({status:!0,message:"Prep log created",data:o}))}catch(e){return t.status(u.uT.INTERNAL_SERVER_ERROR).json((0,d.OF)({status:!1,message:"Something went wrong while creating recruiter",error:e}))}},handleGetLogs=async(e,t)=>{try{let{userId:s}=e.query;if(!s||"string"!=typeof s)return t.status(400).json((0,d.OF)({status:!1,message:"Missing or invalid userId"}));let{data:r,error:a}=await (0,i.getPrepLogsByUserFromDB)(s);if(a)return t.status(500).json((0,d.OF)({status:!1,message:a}));return t.status(200).json((0,d.OF)({status:!0,data:r}))}catch(e){return t.status(u.uT.INTERNAL_SERVER_ERROR).json((0,d.OF)({status:!1,message:"Something went wrong while creating recruiter",error:e}))}},handleUpdateLog=async(e,t)=>{try{let{prepLogId:s,...r}=e.body;if(!s)return t.status(400).json((0,d.OF)({status:!1,message:"prepLogId is required"}));let{data:a,error:n}=await (0,i.updatePrepLogInDB)(s,r);if(n)return t.status(400).json((0,d.OF)({status:!1,message:n}));return t.status(200).json((0,d.OF)({status:!0,message:"Prep log updated",data:a}))}catch(e){return t.status(u.uT.INTERNAL_SERVER_ERROR).json((0,d.OF)({status:!1,message:"Something went wrong while creating recruiter",error:e}))}},handleAddMentorFeedback=async(e,t)=>{try{let r=e.headers["x-admin-secret"],{prepLogId:a,mentorFeedback:n,notifyEmail:o,userId:g,userName:l,userEmail:p}=e.body,c=process.env.ADMIN_SECRET||"TBEAdmin";if(!r||r!==c)return t.status(u.uT.UNAUTHORIZED).json((0,d.OF)({status:!1,message:"Unauthorized"}));if(!a||!n)return t.status(u.uT.BAD_REQUEST).json((0,d.OF)({status:!1,message:"prepLogId and mentorFeedback are required"}));let{data:m,error:E}=await (0,i.updatePrepLogInDB)(a,{mentorFeedback:n});if(E)return t.status(u.uT.BAD_REQUEST).json((0,d.OF)({status:!1,message:E}));if(o&&p&&l&&g)try{let{emailClient:e}=await Promise.resolve().then(s.bind(s,9276));await e.sendEmail({from_email:process.env.FROM_EMAIL||"theboringeducation@gmail.com",from_name:"Sachin from The Boring Education",to_email:p,to_name:l,subject:"I have some feedback for your Prep Yatra \uD83D\uDE80",html_content:`<p>Hi ${l.split(" ")[0]},</p><p>I reviewed your recent Prep Yatra logs. Here's my feedback to help you level up this week:</p><blockquote style="margin:12px 0;padding:12px;border-left:4px solid #6b46c1;background:#faf7ff;">${n}</blockquote><p>Keep going — consistency compounds. Proud of your progress.</p><p>— Sachin</p>`})}catch(e){console.error("Feedback email send failed:",e)}return t.status(u.uT.OKAY).json((0,d.OF)({status:!0,message:"Mentor feedback added",data:m}))}catch(e){return t.status(u.uT.INTERNAL_SERVER_ERROR).json((0,d.OF)({status:!1,message:"Something went wrong while adding mentor feedback",error:e}))}},handleDeleteLog=async(e,t)=>{try{let{prepLogId:s}=e.query;if(!s||"string"!=typeof s)return t.status(400).json((0,d.OF)({status:!1,message:"Invalid prepLogId"}));let{data:r,error:a}=await (0,i.deletePrepLogInDB)(s);if(a)return t.status(404).json((0,d.OF)({status:!1,message:"Log not found"}));return t.status(200).json((0,d.OF)({status:!0,message:"Prep log deleted",data:r}))}catch(e){return t.status(u.uT.INTERNAL_SERVER_ERROR).json((0,d.OF)({status:!1,message:"Something went wrong while creating recruiter",error:e}))}},l=handler,p=(0,o.l)(r,"default"),c=(0,o.l)(r,"config"),m=new a.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/v1/prepyatra/prep-log",pathname:"/api/v1/prepyatra/prep-log",bundlePath:"",filename:""},userland:r})},3506:(e,t,s)=>{s.d(t,{D0:()=>r.D0,uD:()=>r.uD,xM:()=>r.xM});var r=s(7750)}};var t=require("../../../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),s=t.X(0,[4222,5912,5166,9276,7750,3300],()=>__webpack_exec__(675));module.exports=s})();