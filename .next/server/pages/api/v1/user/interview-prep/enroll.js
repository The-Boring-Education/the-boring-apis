"use strict";(()=>{var e={};e.id=4269,e.ids=[4269],e.modules={8097:e=>{e.exports=require("@sentry/nextjs")},2167:e=>{e.exports=require("axios")},3582:e=>{e.exports=require("cors")},1185:e=>{e.exports=require("mongoose")},1649:e=>{e.exports=require("next-auth/react")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3160:e=>{e.exports=require("next/dist/lib/import-next-warning")},5828:e=>{e.exports=require("uuid")},6113:e=>{e.exports=require("crypto")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},1341:(e,t,r)=>{r.r(t),r.d(t,{config:()=>h,default:()=>p,routeModule:()=>c});var s={};r.r(s),r.d(s,{default:()=>m});var a=r(1802),n=r(7153),i=r(6249),o=r(5912),l=r(3300),u=r(9276),d=r(5166);let handler=async(e,t)=>{try{if(await (0,d.D0)(e,t),"OPTIONS"===e.method)return t.status(200).end();if("POST"===e.method)return handleSheetEnrollment(e,t);return t.status(o.uT.BAD_REQUEST).json((0,d.OF)({status:!1,message:`Method ${e.method} Not Allowed`}))}catch(e){return t.status(o.uT.INTERNAL_SERVER_ERROR).json((0,d.OF)({status:!1,message:"Something went wrong",error:e}))}},handleSheetEnrollment=async(e,t)=>{let{userId:r,sheetId:s}=e.body;try{let{data:e,error:a}=await (0,l.getEnrolledSheetFromDB)({sheetId:s,userId:r});if(a)return t.status(o.uT.INTERNAL_SERVER_ERROR).json((0,d.OF)({status:!1,message:"Failed while enrolling in sheet"}));if(e)return t.status(o.uT.BAD_REQUEST).json((0,d.OF)({status:!1,message:"Already enrolled in sheet"}));let{data:n,error:i}=await (0,l.enrollInASheet)({userId:r,sheetId:s});if(i)return t.status(o.uT.INTERNAL_SERVER_ERROR).json((0,d.OF)({status:!1,message:"Failed while enrolling in sheet"}));try{let[e,t]=await Promise.all([(0,l.getUserByIdFromDB)(r),(0,l.getInterviewSheetByIDFromDB)(s)]);e.data&&t.data&&(0,u.Rf)({email:e.data.email,name:e.data.name,id:r,sheetName:t.data.name,sheetDescription:t.data.description}).catch(e=>{console.error("Failed to send interview prep enrollment email:",e)})}catch(e){console.error("Error fetching user/sheet data for email:",e)}return t.status(o.uT.OKAY).json((0,d.OF)({status:!0,data:n,message:"Successfully enrolled in sheet"}))}catch(e){return t.status(o.uT.INTERNAL_SERVER_ERROR).json((0,d.OF)({status:!1,message:"Failed while enrolling in sheet",error:e}))}},m=handler,p=(0,i.l)(s,"default"),h=(0,i.l)(s,"config"),c=new a.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/v1/user/interview-prep/enroll",pathname:"/api/v1/user/interview-prep/enroll",bundlePath:"",filename:""},userland:s})}};var t=require("../../../../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[4222,5912,5166,9276,3300],()=>__webpack_exec__(1341));module.exports=r})();