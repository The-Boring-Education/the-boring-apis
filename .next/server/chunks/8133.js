"use strict";exports.id=8133,exports.ids=[8133],exports.modules={8133:(e,r,t)=>{t.r(r),t.d(r,{authOptions:()=>u,default:()=>c});var i=t(3227),s=t.n(i);let createGoogleProvider=()=>{let e=process.env.GOOGLE_AUTH_CLIENT_ID,r=process.env.GOOGLE_AUTH_CLIENT_SECRET;if(!e||!r)throw Error("GOOGLE_AUTH_CLIENT_ID and GOOGLE_AUTH_CLIENT_SECRET environment variables are required");let i=t(3598).default;return i({clientId:e,clientSecret:r,authorization:{params:{scope:"openid email profile"}}})},n={strategy:"jwt",maxAge:2592e3,updateAge:86400},getCookieConfig=()=>{let e=process.env.COOKIE_DOMAIN;return{sessionToken:{name:"__Secure-next-auth.session-token",options:{httpOnly:!0,sameSite:"lax",path:"/",secure:!0,domain:e||void 0}}}},getAuthSecret=()=>{let e=process.env.NEXTAUTH_SECRET;if(!e)throw Error("NEXTAUTH_SECRET environment variable is required");return e};var o=t(5912),a=t(3300),d=t(7750);let u=((e={})=>{let{pages:r,onSignIn:t,onSession:i}=e;return{providers:[createGoogleProvider()],secret:getAuthSecret(),session:n,cookies:getCookieConfig(),pages:r||{signIn:"/auth/signin",error:"/auth/error"},callbacks:{signIn:async({user:e,account:r,profile:i})=>!t||await t(e,r),jwt:async({token:e,user:r,account:t})=>t&&r?{...e,accessToken:t.access_token,provider:t.provider}:e,session:async({session:e,token:r})=>e.user&&(e.user.id=r.sub||"",i)?await i(e,r):e},events:{async signIn({user:e,account:r,profile:t,isNewUser:i}){console.log(`User signed in: ${e.email} via ${r?.provider}`)},async signOut({session:e,token:r}){console.log(`User signed out: ${e?.user?.email||"unknown"}`)}},debug:!1}})({pages:{signIn:o._j?.register},onSignIn:async(e,r)=>{if(!e)return!1;let{name:t,email:i}=e;if(!i||!t)return!1;try{await (0,d.uD)();let{data:s}=await (0,a.getUserByEmailFromDB)(i);if(s)e.id=s._id.toString();else{let{data:s}=await (0,a.createUserInDB)({name:t,email:i,image:e.image,provider:r?.provider||"google",providerAccountId:r?.providerAccountId||e.id});e.id=s._id.toString()}return!0}catch(e){return console.error("Error signing in:",e),!1}},onSession:async(e,r)=>{e.user.id=r.sub;let{data:t}=await (0,a.getUserByEmailFromDB)(e.user.email);return t&&(e.user.isOnboarded=t.isOnboarded),e}}),c=s()(u)}};